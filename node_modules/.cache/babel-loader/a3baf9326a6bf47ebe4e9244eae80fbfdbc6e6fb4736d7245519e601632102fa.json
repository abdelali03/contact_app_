{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\contactapp-main\\\\src\\\\components\\\\ContactList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getContacts } from \"../api/ContactService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactList = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await getContacts();\n        console.log(\"Fetched contacts:\", response.data);\n        setContacts(response.data); // Ensure this is an array\n      } catch (error) {\n        console.error(\"Error fetching contacts:\", error);\n      }\n    };\n    fetchContacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Array.isArray(contacts) ? contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: contact.name\n    }, contact.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 35\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No contacts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactList, \"0QkyoJrXgoisWwht0c6QpeUnBJE=\");\n_c = ContactList;\nexport default ContactList;\nvar _c;\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"names":["React","useEffect","useState","getContacts","jsxDEV","_jsxDEV","ContactList","_s","contacts","setContacts","fetchContacts","response","console","log","data","error","children","Array","isArray","map","contact","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/contactapp-main/src/components/ContactList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getContacts } from \"../api/ContactService\";\r\n\r\nconst ContactList = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const response = await getContacts();\r\n        console.log(\"Fetched contacts:\", response.data);\r\n        setContacts(response.data); // Ensure this is an array\r\n      } catch (error) {\r\n        console.error(\"Error fetching contacts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {Array.isArray(contacts) ? (\r\n        contacts.map((contact) => <div key={contact.id}>{contact.name}</div>)\r\n      ) : (\r\n        <p>No contacts available</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,WAAW,CAAC,CAAC;QACpCS,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAACG,IAAI,CAAC;QAC/CL,WAAW,CAACE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDL,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAW,QAAA,EACGC,KAAK,CAACC,OAAO,CAACV,QAAQ,CAAC,GACtBA,QAAQ,CAACW,GAAG,CAAEC,OAAO,iBAAKf,OAAA;MAAAW,QAAA,EAAuBI,OAAO,CAACC;IAAI,GAAzBD,OAAO,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAAC,CAAC,gBAErErB,OAAA;MAAAW,QAAA,EAAG;IAAqB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC5B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1BID,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AA4BjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}